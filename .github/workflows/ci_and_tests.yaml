name: Build, Test, Run
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.2'
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...
      - name: Test with the Go CLI
        run: go test ./...

  lint:
    needs: [test]
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.2'
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - name: Run golangci-lint
        run: golangci-lint run ./...
  
  docker-build-and-push:
    needs:  [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

  deploy-and-validate:
    needs:  [test, lint, docker-build-and-push]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: Create Kind cluster
      uses: helm/kind-action@v1.8.0
      with:
        cluster_name: ci-cluster-example
        wait: 120s
    
    - name: Export kubeconfig
      run: |
        echo "Verifying Kind cluster setup..."
        mkdir -p $HOME/.kube
        kind get kubeconfig --name ci-cluster-example > $HOME/.kube/config
        echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
        kubectl config use-context kind-ci-cluster-example
        kubectl cluster-info

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: 'latest'

    - name: Deploy to Kind cluster using Helm
      run: |
        helm upgrade --install pipeline-example ./pipeline-example --set image.repository=mbts89/pipeline_example --set image.tag=latest
        kubectl rollout status deployment/pipeline-example --timeout=90s
    - name: Test API endpoint
      run: |
        echo "Waiting for service to be ready..."
        kubectl wait --for=condition=available --timeout=90s deployment/pipeline-example
        echo "Starting port-forward..."
        kubectl port-forward deployment/pipeline-example 8080:8080 &
        sleep 5
        echo "Testing API response:"
        curl -s http://localhost:8080 | tee result.txt
        grep -q "Hello World" result.txt && echo "✅ API returned expected response" || (echo "❌ Unexpected API response" && exit 1)

    - name: Start tMate Session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true